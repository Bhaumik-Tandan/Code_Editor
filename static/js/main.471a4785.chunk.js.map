{"version":3,"sources":["edit/language/languageHook.js","edit/editors/prog_lang/codeHook/codeHook.js","edit/language/language.js","edit/editors/textEditor/textEditor.js","edit/editors/web/shareButton/box/box.js","edit/editors/web/shareButton/shareButton.js","edit/editors/web/web.js","edit/editors/prog_lang/mainEditor/mainEditor.js","edit/editors/prog_lang/utility/outputpanel/outputConsole/loading/loadingHook/loadingHook.js","edit/editors/prog_lang/utility/runButton/runButton.js","edit/editors/prog_lang/utility/outputpanel/outputConsole/loading/loading.js","edit/restCon.js","edit/editors/prog_lang/utility/outputpanel/outputConsole/outputConsole.js","edit/editors/prog_lang/utility/outputpanel/outputpanel.js","edit/editors/prog_lang/utility/utility.js","edit/editors/prog_lang/prog.js","edit/editors/editors.js","edit/edit.js","siteHost/siteView/util/error.js","siteHost/siteView/util/loading.js","siteHost/siteView/siteView.js","siteHost/siteHost.js","App.js","index.js"],"names":["Language","React","createContext","useLanguage","useContext","LanguageSet","LanguageHook","children","useState","localStorage","language","setLanguage","Provider","value","setVal","Code","CodeSet","useCodeSet","CodeHook","lang","code","setCode","list","require","setLang","className","onClick","e","target","Object","keys","map","v","selected","charAt","toUpperCase","slice","TextEditor","props","style","settings","localStorageName","placeholder","mode","theme","onChange","setFun","fontSize","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","URI","Box","useFetch","post","loading","error","link","setLink","useEffect","a","response","window","location","href","$oid","postData","Modal","show","onHide","handleClose","size","centered","Button","ShareButton","isShared","setIsShared","share","p","docTemplate","html","css","js","empty","Web","setHTML","setCSS","setJS","position","top","left","right","srcdoc","width","styleEditor","MainEditor","Loading","useLoading","LoadingSet","useLoadingSet","LoadingHook","setLoading","prevLoading","RunButton","load","set","disabled","type","color","restCon","payload","method","route","JSON","stringify","fetch","body","headers","OutputConsole","output","setOutput","api_lang","api_url","res","json","runCode","readOnly","OutputPanel","Utility","Prog","Editors","Edit","NotFound","SiteView","id","data","frameBorder","DOMPurify","sanitize","SiteHost","useParams","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.471a4785.chunk.js","sourcesContent":["import React, { useState,useContext,useEffect} from 'react'\r\n\r\n\r\n\r\nconst Language=React.createContext();\r\n\r\nexport function useLanguage()\r\n{\r\n    return useContext(Language);\r\n}\r\n\r\n\r\nconst LanguageSet=React.createContext();\r\nexport function useLanguageSet() {\r\n    return useContext(LanguageSet);   \r\n}\r\n\r\n\r\n\r\nfunction LanguageHook({children}){\r\n    const [language, setLanguage] = useState(localStorage[\"language\"]?localStorage[\"language\"]:\"web\");//to avoid error\r\n\r\n    function changeLanguage(setVal)\r\n    {\r\n        setLanguage(setVal);  \r\n        localStorage[\"language\"]=setVal;\r\n    }\r\n   \r\n    return (\r\n        <LanguageSet.Provider value={changeLanguage} >\r\n        <Language.Provider value={language} >\r\n            {children}\r\n        </Language.Provider>\r\n        </LanguageSet.Provider>\r\n    )\r\n}\r\n\r\nexport default LanguageHook;","import React, { useState,useContext,useEffect} from 'react'\r\nimport {useLanguage} from '../../../language/languageHook';\r\n\r\n\r\nconst Code=React.createContext();\r\n\r\nexport function useCode()\r\n{\r\n    return useContext(Code);\r\n}\r\n\r\n\r\nconst CodeSet=React.createContext();\r\nexport function useCodeSet() {\r\n    return useContext(CodeSet);   \r\n}\r\n\r\n\r\n\r\nfunction CodeHook({children}){\r\n\r\n    const lang=useLanguage();\r\n    const [code, setCode] = useState();;\r\n\r\n    function changeCode(setVal)\r\n    {\r\n        setCode(setVal);  \r\n        localStorage[lang]=setVal;\r\n    }\r\n   \r\n    return (\r\n        <CodeSet.Provider value={changeCode} >\r\n        <Code.Provider value={code} >\r\n            {children}\r\n        </Code.Provider>\r\n        </CodeSet.Provider>\r\n    )\r\n}\r\n\r\nexport default CodeHook;","import React from 'react'\r\nimport {useLanguageSet,useLanguage} from \"./languageHook\";\r\nimport \"./language.css\";\r\nimport {useCodeSet} from \"../editors/prog_lang/codeHook/codeHook\";\r\n\r\nfunction Language() {\r\n    const list = require(\"../editors/prog_lang/settings.json\");\r\n    const setLang=useLanguageSet();\r\n    const language=useLanguage();\r\n    const setLocalStorage=(v)=>localStorage[v]?localStorage[v]:list[v][\"boiler_code\"];\r\n    const setCode=useCodeSet();\r\n\r\n    function onClick(e)\r\n    {\r\n        setLang(e.target.value);\r\n        // setCode(localStorage[language]);\r\n    }\r\n\r\n    return (\r\n        <select className=\"language\" onClick={onClick}>\r\n                <option value=\"web\">Web Design</option>\r\n                {Object.keys(list).map((value)=>{\r\n                    localStorage[value]=setLocalStorage(value);\r\n                    if(language==value)\r\n                    return <option selected key={value} value={value}>{value.charAt(0).toUpperCase()+value.slice(1)}</option>;\r\n                    return <option key={value} value={value}>{value.charAt(0).toUpperCase()+value.slice(1)}</option>\r\n                })}\r\n        </select>\r\n    )\r\n\r\n}\r\n\r\nexport default Language;\r\n","import React from 'react'\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-html'\r\nimport 'ace-builds/src-noconflict/mode-css'\r\nimport 'ace-builds/src-noconflict/mode-javascript'\r\nimport 'ace-builds/src-noconflict/mode-python'\r\nimport 'ace-builds/src-noconflict/mode-ruby'\r\nimport 'ace-builds/src-noconflict/mode-c_cpp'\r\nimport 'ace-builds/src-noconflict/mode-java'\r\nimport 'ace-builds/src-noconflict/theme-monokai'\r\nimport 'ace-builds/src-noconflict/theme-terminal'\r\nimport 'ace-builds/src-noconflict/theme-solarized_dark'\r\nimport 'ace-builds/src-noconflict/theme-twilight'\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nfunction TextEditor(props) {\r\n \r\n  function onChange(e)\r\n  {\r\n    localStorage[props.localStorageName] = e;\r\n    props.setFun(e);\r\n  }\r\n  \r\n    return (\r\n        <AceEditor\r\n            style={props.settings.style}\r\n            value={localStorage[props.localStorageName]}\r\n            placeholder={props.settings.placeholder}\r\n            mode={props.settings.mode}\r\n            theme={props.settings.theme}\r\n            onChange={onChange}\r\n            fontSize={props.settings.fontSize}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            setOptions={{\r\n              enableBasicAutocompletion: true,\r\n              enableLiveAutocompletion: true,\r\n              enableSnippets: true,\r\n              showLineNumbers: true,\r\n              tabSize: props.settings.tabSize\r\n            }} />\r\n    )\r\n}\r\n\r\nexport default TextEditor;\r\n","import Modal from 'react-bootstrap/Modal';\r\nimport Button from '@restart/ui/esm/Button';\r\nimport useFetch from 'use-http';\r\nimport { useState,useEffect } from 'react';\r\n\r\n\r\nconst URI=require(\"../../settings.json\")[\"shareCodePostLink\"];\r\n\r\nfunction Box(props) {\r\n  const {post, loading, error } = useFetch(URI); \r\n  const [link, setLink] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    async function postData() {\r\n      const response = await post(props.code);\r\n      setLink(window.location.href+response.$oid);\r\n    }\r\n\r\n    postData();   \r\n  }, []);\r\n\r\n\r\n    return (\r\n        <Modal\r\n        show={props.show}\r\n        onHide={props.handleClose}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        {loading?<>Posting code</>:<> Go to the following link to see your website on full page\r\n         <a target=\"_blank\" href={link}>{link}</a>\r\n        <Button onClick={props.handleClose}>Close</Button></>\r\n        }\r\n\r\n      </Modal>\r\n    )\r\n}\r\n\r\nexport default Box;\r\n","import React,{useState} from 'react';\r\nimport Box from './box/box';\r\nfunction ShareButton(props) {\r\n\r\n    const [isShared, setIsShared] = useState(false);\r\n\r\n    const share = () => {\r\n        setIsShared(p=>!p);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <center>\r\n            <button onClick={share}>Share</button>\r\n        </center>\r\n        {isShared?<Box show={isShared} code={props.code} handleClose={share}/>:null}\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default ShareButton;\r\n","import React,{useState} from 'react'\r\nimport TextEditor from '../textEditor/textEditor';\r\nimport ShareButton from './shareButton/shareButton';\r\nconst settings=require(\"./settings.json\");\r\nconst docTemplate=(html,css,js)=>`<html><body>${html}</body><style>${css}</style><script>${js}</script></html>`;\r\nconst empty=(v)=>v?v:\"\";\r\nfunction Web() {\r\n\r\n    const [html,setHTML]=useState(empty(localStorage[\"html\"]));\r\n    const [css,setCSS]=useState(empty(localStorage[\"css\"]));\r\n    const [js,setJS]=useState(empty(localStorage[\"js\"]));\r\n\r\n    return (\r\n        <div>\r\n            <ShareButton code={{html:html,css:css,js:js}}/>\r\n            <TextEditor settings={{...settings[\"html\"]}} localStorageName={\"html\"} setFun={setHTML}/>\r\n            <TextEditor settings={{...settings[\"css\"]}} localStorageName={\"css\"} setFun={setCSS}/>\r\n            <TextEditor settings={{...settings[\"js\"]}} localStorageName={\"js\"} setFun={setJS}/>\r\n            <div  style={{\r\n            position: \"absolute\",\r\n            top: \"62vh\",\r\n            left: \"1vw\",\r\n            right: \"1vw\"\r\n          }}>\r\n          <center><h3>PREVIEW</h3></center>\r\n          <iframe \r\n            srcdoc={docTemplate(html,css,js)}\r\n            width=\"100%\" ></iframe>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Web;\r\n","import React,{useEffect} from 'react';\r\nimport { useCodeSet } from '../codeHook/codeHook';\r\nimport TextEditor from \"../../textEditor/textEditor\";\r\n\r\nconst styleEditor={\r\n    \"position\":\"absolute\",\r\n    \"left\":\"2.5vw\",\r\n    \"top\":\"6vh\",\r\n    \"border\":\"0.25vh solid #73AD21\",\r\n    \"width\":\"95vw\",\r\n    \"height\":\"60vh\"\r\n};\r\n\r\nfunction MainEditor(props) {\r\n    const setCode=useCodeSet();\r\n    const settings=require(\"../settings.json\");\r\n\r\n    useEffect(() => {\r\n        setCode(localStorage[props.lang]);\r\n    },[props.lang]);    \r\n\r\n    return (\r\n        <TextEditor settings={{\"style\":styleEditor,\"theme\":\"twilight\",\r\n            \"mode\":settings[props.lang][\"mode\"],\"fontSize\":\"1.5vw\",\"tabSize\":\"2\"}} \r\n            localStorageName={props.lang} setFun={setCode}/>\r\n    )\r\n}\r\n\r\nexport default MainEditor;\r\n","import React, { useState,useContext,useEffect} from 'react'\r\n\r\n\r\nconst Loading=React.createContext();\r\n\r\nexport function useLoading()\r\n{\r\n    return useContext(Loading);\r\n}\r\n\r\n\r\nconst LoadingSet=React.createContext();\r\nexport function useLoadingSet() {\r\n    return useContext(LoadingSet);   \r\n}\r\n\r\n\r\n\r\nfunction LoadingHook({children}){\r\n\r\n    const [loading, setLoading] = useState(0);\r\n\r\n    function changeLoading()\r\n    {\r\n        setLoading(prevLoading=>!prevLoading);  \r\n    }\r\n   \r\n    return (\r\n        <LoadingSet.Provider value={changeLoading} >\r\n        <Loading.Provider value={loading} >\r\n            {children}\r\n        </Loading.Provider>\r\n        </LoadingSet.Provider>\r\n    )\r\n}\r\n\r\nexport default LoadingHook;","import React from 'react';\r\nimport {useLoading,useLoadingSet} from \"../outputpanel/outputConsole/loading/loadingHook/loadingHook\";\r\n\r\n\r\nfunction RunButton() {\r\n    const load=useLoading();\r\n    const set=useLoadingSet();\r\n    return (\r\n        <center>\r\n            {\r\n                load\r\n                    ?\r\n                    <button disabled onClick={set}>RUN</button>\r\n                    :\r\n                    <button onClick={set}>RUN</button>\r\n            }\r\n        </center>\r\n    )\r\n}\r\n\r\nexport default RunButton;\r\n","import React from 'react'\r\nimport ReactLoading from 'react-loading';\r\nimport \"./loading.css\";\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"loading\">\r\n           <ReactLoading  type=\"spokes\" color=\"red\"/>\r\n            <div>Executing</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","export function restCon(payload,method,route)\r\n{\r\n    payload=JSON.stringify(payload);\r\n    return fetch(route, {\r\n         method: method,\r\n         body: payload,\r\n         headers:{\"content-type\": \"application/json\"}\r\n        });\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {useLanguage} from \"../../../../../language/languageHook\";\r\nimport {useLoading,useLoadingSet} from \"./loading/loadingHook/loadingHook\";\r\nimport Loading from \"./loading/loading\";\r\nimport {restCon} from \"../../../../../restCon\";\r\nimport {useCode} from \"../../../codeHook/codeHook\";\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/theme-terminal'\r\nconst settings=require(\"../../../settings.json\");\r\n\r\nfunction OutputConsole(props) {\r\n    const lang=useLanguage();\r\n    const [output,setOutput]=useState(\"Run code to see output here....\");\r\n    const loading=useLoading();\r\n    const setLoading=useLoadingSet();\r\n    const api_lang=settings[lang][\"api_lang\"];\r\n    const api_url=settings[lang][\"api_url\"];\r\n    const code=useCode();\r\n\r\n    useEffect(() => {\r\n        setOutput(\"Run code to see output here....\");\r\n    }, [lang])\r\n\r\n    useEffect(() => {\r\n        async function runCode() \r\n        {\r\n            if(!loading)\r\n            return;\r\n            const res= await restCon({\"code\": code,\"lang\": api_lang},\"POST\",api_url);\r\n            const  response=await res.json();\r\n            const error=response.error;\r\n            const output=response.output;\r\n            if(output)\r\n            setOutput(output);\r\n            else\r\n            setOutput(error);\r\n            setLoading(0);\r\n        }\r\n        runCode();\r\n        \r\n    }, [loading])\r\n\r\n    return (\r\n        <div className=\"outputConsole\">\r\n           {loading?<Loading/>:\r\n           <AceEditor \r\n           value={output} \r\n           theme=\"terminal\"\r\n           fontSize=\"1.2vw\" \r\n           tabSize=\"2\" \r\n           style={{\"position\": \"absolute\", \"width\":\"95vw\",\"height\":\"20vh\"}}\r\n           showGutter={false} \r\n           highlightActiveLine={false}\r\n           readOnly={true}\r\n           />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OutputConsole;\r\n","import React from 'react';\r\n\r\nimport OutputConsole from './outputConsole/outputConsole';\r\nfunction OutputPanel() {\r\n    return (\r\n        <div className=\"output\" style={{position:\"absolute\",top:\"66%\",left:\"2.5%\",width:\"95%\"}}>\r\n            <center><h1>OUTPUT</h1></center>\r\n            <OutputConsole/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default OutputPanel;\r\n","import React from 'react'\r\nimport LoadingHook from './outputpanel/outputConsole/loading/loadingHook/loadingHook';\r\nimport RunButton from \"./runButton/runButton\";\r\nimport OutputPanel from \"./outputpanel/outputpanel\";\r\nfunction Utility() {\r\n    return (\r\n            <LoadingHook>\r\n                <RunButton/>\r\n                <OutputPanel/>\r\n            </LoadingHook>\r\n    )\r\n}\r\n\r\nexport default Utility;\r\n","import React,{useState} from 'react'\r\nimport CodeHook from './codeHook/codeHook';\r\nimport MainEditor from './mainEditor/mainEditor';\r\nimport Utility from \"./utility/utility\";\r\nfunction Prog(props) {\r\n    return (\r\n        <CodeHook>\r\n            <MainEditor lang={props.lang}/>\r\n            <Utility/>\r\n        </CodeHook>\r\n    )\r\n}\r\n\r\nexport default Prog;\r\n","import React from 'react'\r\nimport Web from './web/web';\r\nimport Prog from './prog_lang/prog';\r\nimport {useLanguage} from \"../language/languageHook\";\r\nfunction Editors() {\r\n    const lang=useLanguage();\r\n    return (\r\n        lang==\"web\"?\r\n        <Web/>:\r\n        <Prog lang={lang}/>\r\n    )\r\n}\r\n\r\nexport default Editors;\r\n","import Language from \"./language/language\";\r\nimport LanguageHook from \"./language/languageHook\";\r\nimport Editors from \"./editors/editors\";\r\n\r\nfunction Edit() {\r\n    return (\r\n        <LanguageHook className=\"App\">\r\n        <Language/>\r\n        <Editors/>\r\n      </LanguageHook>\r\n    )\r\n}\r\n\r\nexport default Edit;\r\n","import React from 'react'\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div>\r\n            <h1>404</h1>\r\n            <a href={window.location.href}>{window.location.href}</a>\r\n            <p>Page not found</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;\r\n","import ReactLoading from 'react-loading';\r\nimport \"./loading.css\";\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"loading\">\r\n           <ReactLoading  type=\"spokes\" color=\"red\"/>\r\n            <div>Loading</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react'\r\nimport DOMPurify from \"dompurify\";\r\nimport useFetch from 'use-http';\r\nimport NotFound from './util/error';\r\nimport Loading from './util/loading';\r\nimport \"./siteView.css\";\r\n\r\nconst docTemplate=(html,css,js)=>`<html><body>${html}</body><style>${css}</style><script>${js}</script></html>`;\r\nconst getHook=\"https://ap-south-1.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/onlinecompiler-qnuay/service/CodeShare/incoming_webhook/GetCode?id=\";\r\n\r\nfunction SiteView(props) {\r\n    const { data, loading, error } = useFetch(getHook+props.id,{}, []);    \r\n    return (\r\n    <>\r\n        {error? <NotFound/>:\r\n        loading?<Loading/> :\r\n            <iframe id=\"view\" frameBorder=\"0\" srcdoc={docTemplate(DOMPurify.sanitize(data[0].html),data[0].css,data[0].js)}></iframe>\r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SiteView;\r\n","import React from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport SiteView from './siteView/siteView';\r\nfunction SiteHost() {\r\n    let {id} = useParams();\r\n    return (\r\n        <SiteView id={id}/>\r\n    )\r\n}\r\n\r\nexport default SiteHost;\r\n","import Edit from \"./edit/edit\";\r\nimport React from \"react\";\r\nimport SiteHost from \"./siteHost/siteHost\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/:id\">\r\n          <SiteHost />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <Edit />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}